step "kustomize" {
    name = "Kustomize Updated"
    package_requirement = "AfterPackageAcquisition"
    properties = {
        Octopus.Action.TargetRoles = "AksCluster"
    }

    action {
        action_type = "Octopus.Kubernetes.Kustomize"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.Kustomize.OverlayPath = "k8s/kustomize/overlays/#{Octopus.Environment.Name}"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.DeploymentWait = "False"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            Octopus.Action.SubstituteInFiles.TargetFiles = "k8s/kustomize/base/kustomization.yaml"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        container {
            feed = "docker"
            image = "octopuslabs/k8s-workertools:latest"
        }

        packages "nginx" {
            acquisition_location = "NotAcquired"
            feed = "docker"
            package_id = "nginx"
        }

        packages "k8s-workertools" {
            acquisition_location = "NotAcquired"
            feed = "docker"
            package_id = "octopuslabs/k8s-workertools"
        }
    }
}

step "kustomize-child" {
    name = "Kustomize Parent"
    package_requirement = "AfterPackageAcquisition"
    properties = {
        Octopus.Action.TargetRoles = "AksCluster"
    }

    action "kustomize-child" {
        action_type = "Octopus.Kubernetes.Kustomize"
        name = "Kustomize Child One"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.Kustomize.OverlayPath = "k8s/kustomize/overlays/#{Octopus.Environment.Name}"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.DeploymentWait = "False"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            Octopus.Action.SubstituteInFiles.TargetFiles = "k8s/kustomize/base/kustomization.yaml"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        container {
            feed = "docker"
            image = "octopuslabs/k8s-workertools:latest"
        }
    }

    action "kustomize-child-two" {
        action_type = "Octopus.Kubernetes.Kustomize"
        name = "Kustomize Child Two"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.Kustomize.OverlayPath = "k8s/kustomize/overlays/#{Octopus.Environment.Name}"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.DeploymentWait = "False"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            Octopus.Action.SubstituteInFiles.TargetFiles = "k8s/kustomize/base/kustomization.yaml"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker"
            image = "octopuslabs/k8s-workertools:latest"
        }
    }
}

step "kustomize-external-vcs" {
    name = "Kustomize - External VCS"
    package_requirement = "AfterPackageAcquisition"
    properties = {
        Octopus.Action.TargetRoles = "AksCluster"
    }

    action {
        action_type = "Octopus.Kubernetes.Kustomize"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.Kustomize.OverlayPath = "k8s/kustomize/overlays/#{Octopus.Environment.Name}"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.KubernetesContainers.DeploymentWait = "False"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            Octopus.Action.SubstituteInFiles.TargetFiles = "k8s/kustomize/base/kustomization.yaml"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        container {
            feed = "docker"
            image = "octopuslabs/k8s-workertools:latest"
        }

        git_dependencies {
            default_branch = "master"
            git_credential_id = "GitCredentials-1"
            git_credential_type = "Library"
            repository_uri = "https://github.com/tleed5/OctoPetShop.git"
        }
    }
}